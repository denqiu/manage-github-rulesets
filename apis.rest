# @name GetRepos
GET {{baseUrl}}/users/{{owner}}/repos
Authorization: Bearer {{token}}
Accept: application/vnd.github+json

{{
  exports.repoNames = GetRepos.map(repo => repo.name);
}}

###

{{
  exports.rulesets = [];
}}

# @name RepoRulesets
# @loop for repoName of repoNames
GET {{baseUrl}}/repos/{{owner}}/{{repoName}}/rulesets
Authorization: Bearer {{token}}
Accept: application/vnd.github+json

{{
  if (response.parsedBody.length !== 0) {
    rulesets.push(...response.parsedBody);
  }
}}

###

{{
  exports.rules = [];
}}

# @name RepoRules
# @loop for repoName of repoNames
GET {{baseUrl}}/repos/{{owner}}/{{repoName}}/rules/branches/{{defaultBranch}}
Authorization: Bearer {{token}}
Accept: application/vnd.github+json

{{
  if (response.parsedBody.length !== 0) {
    rules.push(response.parsedBody);
  }
}}

###

# @name CreateRules
POST {{baseUrl}}/repos/{{owner}}/{{targetRepo}}/rulesets
Authorization: Bearer {{token}}
Accept: application/vnd.github+json
Content-Type: application/json

{
  "name": "Ruleset for Default Branch",
  "target": "branch",
  "enforcement": "active",
  "bypass_actors": [],
  "conditions": {
    "ref_name": {
      "include": ["~DEFAULT_BRANCH"],
      "exclude": []
    }
  },
  "rules": [
    { "type": "deletion" },
    { "type": "non_fast_forward" },
    { "type": "creation" },
    { 
      "type": "pull_request",
      "parameters": {
        "required_approving_review_count": 0,
        "dismiss_stale_reviews_on_push": false,
        "require_code_owner_review": false,
        "require_last_push_approval": false,
        "required_review_thread_resolution": false,
        "allowed_merge_methods": [
          "merge",
          "squash",
          "rebase"
        ]
      }
    }
  ]
}
